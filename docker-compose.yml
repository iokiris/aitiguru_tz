version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: order_management_postgres
    environment:
      POSTGRES_DB: order_management
      POSTGRES_USER: app_user
      POSTGRES_PASSWORD: app_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=ru_RU.UTF-8 --lc-ctype=ru_RU.UTF-8"
    ports:
      - "5434:5432"
    volumes:
      - ./database:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app_user -d order_management"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: >
      postgres
      -c shared_preload_libraries=pg_stat_statements
      -c pg_stat_statements.track=all
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100

  fastapi:
    build: .
    container_name: order_management_fastapi
    environment:
      DATABASE_URL: postgresql://app_user:app_password@postgres:5432/order_management
      ENVIRONMENT: development
      LOG_LEVEL: INFO
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
      - .:/app

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: order_management_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      - postgres
    restart: unless-stopped
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  redis:
    image: redis:7-alpine
    container_name: order_management_redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  pgadmin_data:
  redis_data:
